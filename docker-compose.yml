services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${NAME_DB}
      POSTGRES_USER: ${USER_DB}
      POSTGRES_PASSWORD: ${PASS_DB}

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  web:
    build: .
    command: python src/bin/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./src/config/.env.prod:/app/src/.env.prod
    ports:
      - 8000:8000
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${NAME_DB}
      POSTGRES_USER: ${USER_DB}
      POSTGRES_PASSWORD: ${PASS_DB}
    expose:
      - "8000"
    depends_on:
      - db

  celery:
      build: .
      command: celery -A src.module.tasks.celery worker --loglevel=info
      volumes:
        - .:/app
      env_file:
        - .env.prod
      environment:
        - CELERY_BROKER_URL=${CELERY_BROKER_URL}
        - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
        - PYTHONPATH=/app/src
      depends_on:
        - db
        - redis

volumes:
  postgres_data:

